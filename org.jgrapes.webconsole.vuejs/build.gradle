buildscript {
	repositories {
		jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
		classpath 'com.github.ksoichiro:gradle-web-resource-plugin:1.7.3'
        classpath "gradle.plugin.org.kravemir.gradle.sass:GradleSassPlugin:1.2.2"
	}
}

import org.kravemir.gradle.sass.SassCompileTask;

apply plugin: 'com.moowork.node'

artifacts {
	archives sourcesJar
	archives javadocJar
}

dependencies {
    compile project(':org.jgrapes.webconsole.base')
    runtimeOnly project(':org.jgrapes.webconsole.provider.vue')
    runtimeOnly project(':org.jgrapes.webconsole.provider.vuex')
    runtimeOnly project(':org.jgrapes.webconsole.provider.jgwcvuecomponents')
    runtimeOnly project(':org.jgrapes.webconsole.provider.fontawesome')
    runtimeOnly project(':org.jgrapes.webconsole.provider.lodash')
    runtimeOnly project(':org.jgrapes.webconsole.provider.jqueryui')
    runtimeOnly project(':org.jgrapes.webconsole.provider.gridstack')
    runtimeOnly project(':org.jgrapes.webconsole.provider.jquitouchpunch')
}

ext.releaseVersion = "0.4.0"
ext.isSnapshot = true
version = releaseVersion + (isSnapshot ? "-SNAPSHOT" : "")

jar {
    into('META-INF') {
        from 'resources/META-INF'
    }
    into('.') {
        from 'build/generated/resources'
    }
}

task prepareNpmLibs(type: Copy) {
    description '''
    Helper task that copies the the libraries from the npm_modules 
    directory into a package scoped subdirectory. The root is added 
    to eclipse as resource directory thus making the files available 
    as package scoped resources when running a process in eclipse.
    '''
    dependsOn(':npmInstall')
    into('build/generated/resources/org/jgrapes/webconsole/vuejs/lib')
    from file("${rootProject.projectDir}/node_modules/normalize.css/normalize.css")
}

processResources.dependsOn 'prepareNpmLibs'

//task webpack(type: NodeTask) {
//    dependsOn(':npmInstall')
//    inputs.file project.file('webpack.config.js')
//    inputs.dir project.file('consoleapp/javascript')
//    outputs.dir project.file('consoleapp')
//    def osName = System.getProperty("os.name").toLowerCase();
//    if (osName.contains("windows")) {
//      script = file("${rootProject.projectDir}/node_modules/webpack/bin/webpack.js")
//    } else {
//      script = file("${rootProject.projectDir}/node_modules/.bin/webpack")
//    }
//    args = ["--config", "webpack.config.js"]
//}
//  
// processResources.dependsOn 'webpack'

apply plugin: 'io.miret.etienne.sass'

sass {
    // Base URL where to download dart-sass from:
    baseUrl = 'https://github.com/sass/dart-sass/releases/download'
    // dart-sass version to use:
    version = '1.26.2'
}

compileSass {
  // Source directory containing sass to compile:
  sourceDir = project.file("$projectDir/resources/org/jgrapes/webconsole/vuejs/scss")
  
  // Directory where to output generated CSS:
  outputDir = project.file("$buildDir/generated/resources/org/jgrapes/webconsole/vuejs")
  
  // Set the output style:
  // Possible values are “expanded” and “compressed”, default is “expanded”.
  style = expanded

  // Source map style:
  //  - file: output source map in a separate file (default)
  //  - embed: embed source map in CSS
  //  - none: do not emit source map.
  sourceMap = file
}

processResources.dependsOn 'compileSass'

sourceSets.main.resources.srcDir 'build/generated/resources'

eclipse {
    autoBuildTasks prepareNpmLibs, compileSass
}

ext.jsDocDestDir = "${rootProject.buildDir}/javadoc/org/jgrapes/webconsole/vuejs/jsdoc"

task jsdoc(type: NodeTask) {
    dependsOn(':npmInstall')
    new File(jsDocDestDir).mkdirs()
    script = file("${rootProject.projectDir}/node_modules/jsdoc/jsdoc.js")
    args = ["-c", "${rootProject.projectDir}/jsdoc.json",
        "--destination", jsDocDestDir,
        "resources/org/jgrapes/webconsole/vuejs/vuejsconsole.js"]
}
