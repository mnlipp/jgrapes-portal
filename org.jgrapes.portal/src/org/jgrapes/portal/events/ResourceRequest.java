/*
 * Ad Hoc Polling Application
 * Copyright (C) 2018 Michael N. Lipp
 * 
 * This program is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by 
 * the Free Software Foundation; either version 3 of the License, or 
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 * for more details.
 * 
 * You should have received a copy of the GNU General Public License along 
 * with this program; if not, see <http://www.gnu.org/licenses/>.
 */

package org.jgrapes.portal.events;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;

import org.jdrupes.httpcodec.protocols.http.HttpRequest;
import org.jgrapes.core.Event;
import org.jgrapes.http.events.GetRequest;
import org.jgrapes.io.IOSubchannel;
import org.jgrapes.portal.RenderSupport;

/**
 * An event that signals the request for a resource by the browser.
 * 
 * This event is effectively a "transformed" {@link GetRequest}. It 
 * simplifies handling of such an event by portal components, because
 * they only have to provide a {@link URL} as result and thus need
 * no knowledge about generating all the events required to properly
 * respond to a {@link GetRequest}.
 * 
 * Handlers of {@link ResourceRequest} events use usually only
 * the information provided by {@link #resourceUri()}. The other
 * items are needed by the handler of the {@link ResourceRequestCompleted}
 * event to generate the response for the {@link GetRequest}.
 * 
 * If a matching resource cannot be expressed by a {@link URL},
 * the resource provider may generate the response itself. To
 * indicate that the request has been handled it must set the
 * result value of this event to {@link #RESPONSE_GENERATED}.
 */
public class ResourceRequest extends Event<URL> {
	
	private static URL createResponseGeneratedUrl() {
		try {
			return new URL("file:///response/generated/by/provider");
		} catch (MalformedURLException e) {
			// Does not happen
			return null;
		}
	}

	/**
	 * Used as result of a {@link ResourceRequest} if the response
	 * has been generated by the provider.
	 */
	public static final URL RESPONSE_GENERATED = createResponseGeneratedUrl();
	
	private URI resourceUri;
	private HttpRequest httpRequest;
	private IOSubchannel httpChannel;
	private RenderSupport renderSupport;

	/**
	 * Creates a new request, including the associated 
	 * {@link ResourceRequestCompleted} event.
	 * 
	 * @param resourceUri the requested resource
	 * @param httpRequest the original HTTP request
	 * @param httpChannel the channel that the HTTP request was received on
	 * @param renderSupport the render support
	 */
	public ResourceRequest(URI resourceUri, HttpRequest httpRequest,
			IOSubchannel httpChannel, RenderSupport renderSupport) {
		this.resourceUri = resourceUri;
		this.httpRequest = httpRequest;
		this.httpChannel = httpChannel;
		this.renderSupport = renderSupport;
		new ResourceRequestCompleted(this);
	}

	/**
	 * Returns the "raw" request as provided by the HTTP decoder.
	 * 
	 * @return the request
	 */
	public HttpRequest httpRequest() {
		return httpRequest;
	}

	/**
	 * @return the httpChannel
	 */
	public IOSubchannel httpChannel() {
		return httpChannel;
	}

	/**
	 * @return the resourceUri
	 */
	public URI resourceUri() {
		return resourceUri;
	}
	
	/**
	 * Returns the render support.
	 * 
	 * @return the render support
	 */
	public RenderSupport renderSupport() {
		return renderSupport;
	}

}
