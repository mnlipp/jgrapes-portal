buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.github.ksoichiro:gradle-web-resource-plugin:1.7.3'
	}
}

task javadocJar(type: Jar) {
	from (javadoc)
	classifier "javadoc"
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

dependencies {
	compile 'org.jgrapes:org.jgrapes.http:[0.16.0,)'
	compile 'org.jgrapes:org.jgrapes.util:[0.16.0,)'
//  compile 'com.github.mnlipp:jgrapes:master-SNAPSHOT'
	compile 'org.jdrupes.json:json:[2.0.0,2.1.0)'
    compile 'org.freemarker:freemarker:[2.3.27-incubating,2.4)'
}

jar {
    into('META-INF') {
        from 'resources/META-INF'
    }
}

apply plugin: 'com.moowork.node'

ext.jsDocDestDir = "${rootProject.buildDir}/javadoc/jsdoc"

task documentationjs(type: NodeTask) {
	dependsOn(':npmInstall')
	new File(jsDocDestDir).mkdirs()
	script = file("${rootProject.projectDir}/node_modules/documentation/bin/documentation.js")
	args = ["build", "--format", "html", "--output", jsDocDestDir,
		"resources/org/jgrapes/portal/functions.js"]
}

javadoc {
	dependsOn documentationjs

	options.tagletPath = rootProject.configurations.javadocTaglets.files as List
	options.taglets = ["org.jdrupes.taglets.plantUml.Taglet"]
	
	classpath = files(rootProject.subprojects.collect {project ->
		project.sourceSets.main.compileClasspath})
	source rootProject.subprojects.findAll({project -> project.name.startsWith("org.jgrapes.")}) \
		.collect {project -> project.sourceSets.main.allJava }
	options.addStringOption("doctitle", "JGrapes Portal ${project.version}")
	options.addStringOption("overview", "${rootProject.rootDir}/overview.md")
	inputs.file "${rootProject.rootDir}/overview.md"
	options.addBooleanOption("use", true)
	options.addBooleanOption("linksource", true)
	options.stylesheetFile(file("${rootProject.rootDir}/misc/stylesheet.css"))
	options.addStringOption("bottom", file("${rootProject.rootDir}/misc/javadoc.bottom.txt").text)
	options.links "https://docs.oracle.com/javase/8/docs/api/"
	options.links "http://mnlipp.github.io/jgrapes/latest-release/javadoc/"
	destinationDir = file("${rootProject.buildDir}/javadoc")
}

