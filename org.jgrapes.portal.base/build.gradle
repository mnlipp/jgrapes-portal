buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.github.ksoichiro:gradle-web-resource-plugin:1.7.3'
	}
}

dependencies {
	// BndPomRepository (3.5.0) cannot handle ranges without upper limit 
	compile 'org.jgrapes:org.jgrapes.http:[1.1.1,2)'
	compile 'org.jgrapes:org.jgrapes.util:[1.1.1,2)'
//  compile 'com.github.mnlipp:jgrapes:master-SNAPSHOT'
	compile 'org.jdrupes.json:json:[2.0.0,2.1.0)'
    compile 'org.freemarker:freemarker:[2.3.27-incubating,2.4)'
}

ext.releaseVersion = "0.27.0"
ext.isSnapshot = true
version = releaseVersion + (isSnapshot ? "-SNAPSHOT" : "")

jar {
    into('META-INF') {
        from 'resources/META-INF'
    }
}

task javadocJar(type: Jar) {
    from (javadoc)
    classifier "javadoc"
}

artifacts {
    archives javadocJar
}

apply plugin: 'com.moowork.node'

ext.jsDocDestDir = "${rootProject.buildDir}/javadoc/jsdoc"

task documentationjs(type: NodeTask) {
	dependsOn(':npmInstall')
	new File(jsDocDestDir).mkdirs()
	script = file("${rootProject.projectDir}/node_modules/documentation/bin/documentation.js")
	args = ["build", "--format", "html", "--output", jsDocDestDir,
		"resources/org/jgrapes/portal/base/functions.js"]
}

javadoc {
    // Does not work on JitPack, no /usr/bin/dot
    enabled = JavaVersion.current().isJava8() && !isJitPackBuild
    
    if (!isJitPackBuild) {
        // Does not work on jitpack
        dependsOn documentationjs
    }

	options.tagletPath = rootProject.configurations.javadocTaglets.files as List
	options.taglets = ["org.jdrupes.taglets.plantUml.Taglet"]
	
	classpath = files(rootProject.subprojects.collect {project ->
		project.sourceSets.main.compileClasspath})
	source rootProject.subprojects.findAll({project -> 
        project.name.startsWith("org.jgrapes.") && project.name != "org.jgrapes.portal"}) \
		.collect {project -> project.sourceSets.main.allJava }
	options.addStringOption("doctitle", "JGrapes Portal ${project.version}")
	options.addStringOption("overview", "${rootProject.rootDir}/overview.md")
	inputs.file "${rootProject.rootDir}/overview.md"
	options.addBooleanOption("use", true)
	options.addBooleanOption("linksource", true)
    if (JavaVersion.current().isJava8()) {
        options.stylesheetFile(file("${rootProject.rootDir}/misc/stylesheet.css"))
    }
	options.addStringOption("bottom", file("${rootProject.rootDir}/misc/javadoc.bottom.txt").text)
	options.links "https://docs.oracle.com/javase/8/docs/api/"
	options.links "http://mnlipp.github.io/jgrapes/latest-release/javadoc/"
	destinationDir = file("${rootProject.buildDir}/javadoc")
}

