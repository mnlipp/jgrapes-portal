import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.jdrupes.mdoclet'
    
if (project.file("bnd.bnd").exists()) {

    apply plugin: 'biz.aQute.bnd.builder'
        
    // Provide the Bundle-Version (shared by all libraries)
    String bundleVersion = releaseVersion +
        (isSnapshot ? ".-\${tstamp}-SNAPSHOT" : ".ga")
        
    jar {
        manifest {
            attributes('Bundle-Version': bundleVersion)
        }
    }

}
    
dependencies {
    compileOnly 'org.osgi:org.osgi.annotation:6.0.0'
    testCompile 'junit:junit:4.12', 'net.jodah:concurrentunit:0.4.2'
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-3"
}

apply from: "${project.rootDir}/gradle/layout.gradle"
    
test {
//    if (!rootProject.isTravisBuild) {
//        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=18888'
//    }
        
    testLogging {
        events TestLogEvent.FAILED,
               TestLogEvent.SKIPPED,
               TestLogEvent.PASSED,
               TestLogEvent.STANDARD_ERROR,
               TestLogEvent.STANDARD_OUT

        exceptionFormat TestExceptionFormat.FULL

        showStandardStreams = true
        showExceptions = true
        showStackTraces = true
        showCauses = true
    }
        
    if (isTravisBuild) {
        maxParallelForks = 2
        maxHeapSize = '768m'
    }
}

apply from: "${project.rootDir}/gradle/publishing.gradle"

apply from: "${project.rootDir}/gradle/baseline.gradle"

apply from: "${project.rootDir}/gradle/eclipse.gradle"
